@page "/manajemen-produk/tambah"
@page "/manajemen-produk/edit/{id:int}"
@inject IProdukService ProdukService

@if(Id==null)
{
    <PageTitle>Tambah Produk Baru</PageTitle>
    <h3>Tambah Produk Baru</h3>
}
else {
    <PageTitle>Edit Data @prod.Nama</PageTitle>
    <h3>Edit Produk @prod.Nama</h3>
}

<EditForm Model="prod" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="from-group row">
        <label for="IdKategori" class="col-sm-2 col-form-label">Id Kategori</label>
        <InputNumber id="IdKategori" @bind-Value="@prod.IdKategori" class="form-control"></InputNumber>
        <ValidationMessage For="@(() => prod.Kategori)" />
    </div>

    <div class="from-group row">
        <label for="Nama" class="col-sm-2 col-form-label">Nama</label>
        <InputText id="Nama" @bind-Value="@prod.Nama" class="form-control"></InputText>
        <ValidationMessage For="@(() => prod.Nama)" />
    </div>

    <div class="from-group row">
        <label for="Deskripsi" class="col-sm-2 col-form-label">Deskripsi</label>
    <InputText id="Deskripsi" @bind-Value="@prod.Deskripsi" class="form-control"></InputText>
        <ValidationMessage For="@(() => prod.Deskripsi)" />
    </div>

    <div class="from-group row">
        <label for="Gambar" class="col-sm-2 col-form-label">Gambar</label>
        <InputText id="Gambar" @bind-Value="@prod.GambarUrl" class="form-control"></InputText>
        <ValidationMessage For="@(() => prod.GambarUrl)" />
    </div>

    <div class="from-group row">
        <label for="Harga" class="col-sm-2 col-form-label">Harga</label>
        <InputNumber id="Harga" @bind-Value="@prod.Harga" class="form-control"></InputNumber>
        <ValidationMessage For="@(() => prod.Harga)" />
    </div>

    <div class="from-group row">
        <label for="HargaOriginal" class="col-sm-2 col-form-label">Harga Original</label>
        <InputNumber id="HargaOriginal" @bind-Value="@prod.HargaOriginal" class="form-control"></InputNumber>
        <ValidationMessage For="@(() => prod.HargaOriginal)" />
    </div>

    <div class="from-group row">
        <label for="IsPublic" class="col-sm-2 col-form-label">Publik?</label>
        <InputRadioGroup id="IsPublic" @bind-Value="@prod.IsPublic" class="form-check">
            <InputRadio Value="@true" class="form-check-input"/> Ya
            <InputRadio Value="@false" class="form-check-input" /> Tidak
        </InputRadioGroup>
        <ValidationMessage For="@(() => prod.IsPublic)" />
    </div>

    <div class="from-group row">
        <label for="IsDeleted" class="col-sm-2 col-form-label">Deleted?</label>
        <InputRadioGroup id="IsDeleted" @bind-Value="@prod.IsDeleted" class="form-check">
            <InputRadio Value="@true" class="form-check-input" /> Ya
            <InputRadio Value="@false" class="form-check-input" /> Tidak
        </InputRadioGroup>
        <ValidationMessage For="@(() => prod.IsDeleted)" />
    </div>

    <div class="from-group row">
        <label for="DateCreated" class="col-sm-2 col-form-label">
            Date Created : 
        </label>
        <InputDate id="DateCreated" @bind-Value="prod.DateCreated"></InputDate>
    </div>

    <div class="from-group row">
        <label for="DateUpdated" class="col-sm-2 col-form-label">
            Date Updated : 
        </label> 
        <InputDate id="DateUpdated" @bind-Value="prod.DateUpdated" ></InputDate>
    </div>


    <br /><br />
    <div class="from-group row">
        <button type="submit" class="btn btn-primary form-control">@btnTxt</button>
        <button type="button" class="btn btn-danger form-control" @onclick="HapusProduk">Hapus</button>
    </div>


</EditForm>




@code {
    [Parameter]
    public int? Id { get; set; }

    string btnTxt = string.Empty;

    Produk prod = new Produk();

    protected override async Task OnInitializedAsync()
    {
        btnTxt = Id == null ? "Tambah Produk Baru" : "Ubah Produk";
    }

    protected override async Task OnParametersSetAsync()
    {
        if(Id != null)
        {
            prod = await ProdukService.GetProdukById((int)Id);
        }
    }

    public async void HandleSubmit()
    {
        if(Id==null)
        {
            await ProdukService.CreateProduk(prod);
        }

        else
        {
            await ProdukService.UpdateProduk(prod);
        }
    }

    async Task HapusProduk()
    {
        await ProdukService.DeleteProduk(prod.IdProduk);
    }
}
